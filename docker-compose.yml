version: '3.8'
services:
  postgres:
    image: postgres:14.4-alpine
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "docker", "-U", "docker"]
      timeout: 20s
      interval: 5s
      retries: 5
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - FRONTLOGS_DB_USER=docker
      - FRONTLOGS_DB_PASSWORD=docker
      - FRONTLOGS_DB_NAME=frontlogs
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./db:/docker-entrypoint-initdb.d/
      - ./logserver/data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
  logserver:
    build: ./logserver
    healthcheck:
      test: curl --silent http://localhost:80/actuator/health | grep {\"status\":\"UP\"} || exit 1
      timeout: 20s
      interval: 10s
      retries: 5
    environment:
      - DB_HOST=postgres
      - SPRING_SERVER_PORT=80
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/frontlogs
    volumes:
      - ./logserver/logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - '8090:80'
